{
    "text": "S Y L L A B U S\n\nT H E   C O M P L E T E   I O S  \nA P P   D E V E L O P M E N T  \nB O O T C A M P\n\nA P P   B R E W E R Y\n\nw w w . a p p b r e w e r y . c o  \n\nI O S / X C O D E   I N T E R F A C E   B U I L D E R  \n\nHow to set up a new Xcode project. \nHow to use the Interface Builder to design and create the\nappearance of your app. \nHow to find your way around Xcode. \nHow to\u00a0size and arrange\u00a0various UI elements.\nHow to\u00a0add custom image assets to Xcode projects. \nHow to create app icons and size them for all resolutions.\nHow to run apps on the iOS Simulator as well as sideload to\na physical device.\n\nI N T R O D U C T I O N   T O   I O S\nD E V E L O P M E N T  \n\nLearn to clone projects from GitHub. \nLink design with code via IBActions and IBOutlets. \nLearn to detect user interaction through UIButtons. \nUnderstand and use Swift variables, constants and collection\ntypes. \nLearn about printing and commenting in Swift. \nLearn about randomisation in swift and range operators. \nLearn to use Image Literals in code. \nLearn to use Swift Playgrounds. \nUnderstand the data type system and the primitive data types\nsuch as Strings, Ints and Doubles. \n\nI O S   A U T O   L A Y O U T   A N D   S E T T I N G\nC O N S T R A I N T S  \n\nHow to add constraints and understand how auto layout\nworks. \nHow to Pin and Align UI elements. \nHow to create containers to configure advanced layouts. \nHow to debug auto layout errors. \nUnderstand the pre-requisites to automatic layout.\nHow to use stack views to easily layout your UI. \n\nR E A D I N G   A N D   U S I N G   A P P L E\nD O C U M E N T A T I O N  \n\nFigure out how to play sound using AVFoundation and\nAVAudioPlayer through understanding Apple documentation.\nHow to use Swift functions and understand input parameters\nand return types.\nError handling using try and catch. \nCode refactoring. \nBasic debugging for code errors. \n\n \n\fS Y L L A B U S\n\nT H E   C O M P L E T E   I O S  \nA P P   D E V E L O P M E N T  \nB O O T C A M P\n\nA P P   B R E W E R Y\n\nw w w . a p p b r e w e r y . c o  \n\nC O N T R O L   F L O W   A N D   O P T I O N A L S\n\nUnderstand\u00a0the need and use cases of Swift Optionals.\nHow to use IF-ELSE and Switch statements to control the flow\nof code execution.\nLearn about Swift Dictionaries.\nLearn to use the UIProgressView to create an animated\nprogress bar.\nFigure out how to use the Timer object in Swift using\ndocumentation.\u00a0\n\nI O S   D E S I G N   P A T T E R N S   A N D   T H E\nM O D E L - V I E W - C O N T R O L L E R   ( M V C )  \n\nWhat is a design pattern and how is it used in programming. \nHow to use the Model-View-Controller or MVC pattern for\napp development. \nLearn about 2D arrays.\nLearn about Swift Structures and creating custom types. \nLearn about struct initialisation.\nLearn about properties and methods and the difference\nbetween functions and methods.\nLearn about immutability and the mutating keyword.\n\nM U L T I - S C R E E N   A P P L I C A T I O N S\n\nLearn about Swift classes.\nLearn about Object-Oriented Programming and inheritance.\nLearn the difference between Structures and Classes and \nwhen to use each.\nLearn to use the UISlider.\nCreating a custom UIViewController class.\nCreating UI completely programmatically without Interface \nBuilder.\nHow to build a multi-screen app using segues.\u00a0\nAdvanced methods of handling Swift Optionals, including \nOptional Binding, Optional Chaining and the Nil Coalescing \nOperator.\nLearn about Color Literals.\n\nN E T W O R K I N G ,   A P I S   A N D \u00a0 J S O N\nP A R S I N G  \n\nHow to\u00a0use public APIs to get live data from the internet.\nLearn about Networking\u00a0and use the native URLSession\nobject to make HTTP requests to a server. \nLearn about the Decodable Protocol and how to parse JSON\nformatted data using the native JSONDecoder.\n\n \n\fS Y L L A B U S\n\nT H E   C O M P L E T E   I O S  \nA P P   D E V E L O P M E N T  \nB O O T C A M P\n\nA P P   B R E W E R Y\n\nw w w . a p p b r e w e r y . c o  \n\nLearn to create Dark Mode differentiated assets and use \nvector assets.\nLearn to use the UITextField to get keyboard inputs.\nLearn about Swift Protocols\nLearn about the Delegation design pattern using Protocols.\nLearn about Swift Extensions.\nLearn to to use Swift computed properties.\nUnderstand the completion handler and the Swift Closure.\u00a0\nLearn about Core Location to tap into the device GPS data.\n\nS W I F T U I ,   C O M B I N E   &   C A T A L Y S T\n\nUnderstand what is SwiftUI and how it's different from UIKit.\nLearn to write declarative SwiftUI code to create user \ninterfaces programmatically.\nLearn to build user interfaces using SwiftUI Text, Button, \nImage, HStack, VStack, ZStack, List, Color and NavigationView \ncomponents.\nLearn to use the Preview pane and live Preview.\nUse the Object Library to turn UI elements into code.\nUnderstand and use SwiftUI modifiers to chain modification \nmethods to SwiftUI components.\nUnderstand the SwiftUI Closure syntax to add custom \nfunctionality to SwiftUI components.\nSee the difference between Imperative and Declarative code.\nManage state using the @State property modifier.\nLearn about the @Published property modifier from the \nCombine framework that allows for more complex state \nmanagement.\u00a0\nManage complex app state using the ObservableObject \nprotocol.\nLearn to incorporate UIKit components in a SwiftUI app \nusing the UIViewRepresentable protocol.\nSee your iOS apps turn into a Mac app by leveraging project \nCatalyst.\n\nT H E   C O M M A N D   L I N E   A N D   T E R M I N A L  \n\nHow to use basic bash commands in the Unix Terminal. \nHow to manipulate files and folders without needing a\ngraphical user interface. \nHow to download and install to your computer using\ncommand line. \n\nG I T   G I T H U B   A N D   V E R S I O N   C O N T R O L  \n\nUsing git for version control and collaboration \nGit forking, branching and cloning \nUsing GitHub as a remote repository \nCheckout and rolling back changes with git \nUsing git and GitHub with Xcode \n\n \n\fC L O U D   B A S E D   B A C K E N D\n( F I R E B A S E ) ,   U S E R   A U T H E N T I C A T I O N\nA N D   T A B L E V I E W S  \n\nHow to integrate third party libraries in your app. \nHow to store data in the cloud using Firebase. \nHow to query the Firebase database. \nHow to use Firebase for user authentication. \nHow to work with a UITableView. \nHow to use custom cells in a Table View. \nHow to embed View Controllers in a Navigation Controller\nand understanding the navigation stack. \nHow to create Segues for navigation. \nHow to make custom .xib files to modify native design\ncomponents. \nUsing Grand Central Dispatch to queue asynchronous tasks. \n\nP E R S I S T E N T   S T O R A G E   S O L U T I O N S  \n\nHow to use UserDefaults and plists\nHow to use the Codable Protocol to save to file\nHow to use Core Data for relational data management\nHow to use Realm as a modern database solution\n\nI N - A P P   P U R C H A S E S   A N D   A P P L E\nS T O R E K I T   A P I  \n\nHow to integrate the Apple StoreKit API into your app \nHow to charge once only and subscription payments for\napps \nHow to test using Sandbox accounts \n\nM A C H I N E   L E A R N I N G   O N   I O S ,\nC O R E M L   A N D   C R E A T E M L  \n\nIntroduction to machine learning \nCoreML - Using pre-trained machine learning models for \nimage recognition \nUsing IBM Watson Bluemix and Carthage for intelligent iOS \napps \nAdvanced CoreML - Converting a model from Caffe to \nMLModel \nCreateML - Creating your own image recognition model \nAdvanced CreateML - Create a Twitter sentiment analysis \nmachine learning model using natural language processing \n(NLP) tools from CreateML. \n\nS Y L L A B U S\n\nT H E   C O M P L E T E   I O S\nA P P   D E V E L O P M E N T\nB O O T C A M P\n\nA P P   B R E W E R Y\n\nw w w . a p p b r e w e r y . c o  \n\n \n \n\fA U G M E N T E D   R E A L I T Y   O N   I O S   A N D\nA R K I T \u00a0  \n\nIntroduction to augmented reality, ARKit and SceneKit \nCreating 3D objects and text in AR \nAnimations in AR \nPlane detection \nMeasuring real world distances in AR \nImage recognition and tracking in AR \nRendering 3D models on tracked images\u00a0 \nPlaying videos in real world tracked images \n\nP U B L I S H I N G   T O   T H E   A P P   S T O R E  \n\nFamiliarising with App Store Connect\nHow to write the app listing\nApple TestFlight\nSubmitting your app for review\n\nM O B I L E   A P P   D E S I G N \u00a0  \n\nColour Theory \nTypography \nMobile User Interface (UI) design fundamentals \nMobile User Experience (UX) design fundamentals \niOS vs. Android design differences \nHow to use Sketch, Marvel to design your app mockup \nDesign resources \n\nM O B I L E   A P P   M A R K E T I N G \u00a0  \n\nIdea validation and MVP \nApp monetisation models \nOptimising the app store listing \nGrowth hacking techniques for app downloads \nHow to get press coverage for your app \nHow to get your app featured on the app store \nApp Store Optimisation (ASO) how to rank on the app store\nsearch engine \nHow to use paid advertising to get more customers \nImproving your app store ratings and reviews \nApp analytics \nBlack hat vs. white hat techniques for app marketing \nHow to build a app showcase website \n\nS Y L L A B U S\n\nT H E   C O M P L E T E   I O S  \nA P P   D E V E L O P M E N T  \nB O O T C A M P\n\nA P P   B R E W E R Y\n\nw w w . a p p b r e w e r y . c o  \n\n \n\f",
    "line_count": 239,
    "urls": [],
    "file_hash": "2889b81e81a0b97e5fb5de4e9c39af8288137becdd3633fc8484761f12f72f6f",
    "file_analysis_stats": 